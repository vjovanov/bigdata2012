
@article{snir_mpi:_1995,
	title = {{MPI:} The complete reference},
	shorttitle = {{MPI}},
	author = {Snir, M. and Otto, {S.W.} and Walker, {D.W.} and Dongarra, J. and {Huss-Lederman}, S.},
	year = {1995},
	file = {Google Scholar Linked Page:/home/vjovanov/.zotero/zotero/fwqxvpuo.default/zotero/storage/EQV2HRNF/Snir et al. - 1995 - MPI The complete reference:}
},

@inproceedings{rompf_lightweight_2010,
	title = {Lightweight modular staging: a pragmatic approach to runtime code generation and compiled {DSLs}},
	shorttitle = {Lightweight modular staging},
	booktitle = {Proceedings of the ninth international conference on Generative programming and component engineering},
	author = {Rompf, T. and Odersky, M.},
	year = {2010},
	pages = {127–136},
	file = {Google Scholar Linked Page:/home/vjovanov/.zotero/zotero/fwqxvpuo.default/zotero/storage/JW7F77JV/citation.html:text/html;p127-rompf.pdf:/home/vjovanov/.zotero/zotero/fwqxvpuo.default/zotero/storage/JA7CTU6T/p127-rompf.pdf:application/pdf}
},

@book{bird_pearls_2010,
	edition = {1},
	title = {Pearls of Functional Algorithm Design},
	isbn = {0521513383},
	publisher = {Cambridge University Press},
	author = {Bird, Richard},
	month = nov,
	year = {2010},
	file = {di-0464.pdf:/home/vjovanov/.zotero/zotero/fwqxvpuo.default/zotero/storage/775TTTRV/di-0464.pdf:application/pdf}
},

@misc{matei_spark_????,
	title = {Spark},
	url = {http://spark-project.org/},
	author = {Matei, Zaharia}
},

@inproceedings{olston_pig_2008,
	title = {Pig latin: a not-so-foreign language for data processing},
	shorttitle = {Pig latin},
	booktitle = {Proceedings of the 2008 {ACM} {SIGMOD} international conference on Management of data},
	author = {Olston, C. and Reed, B. and Srivastava, U. and Kumar, R. and Tomkins, A.},
	year = {2008},
	pages = {1099–1110},
	file = {Google Scholar Linked Page:/home/vjovanov/.zotero/zotero/fwqxvpuo.default/zotero/storage/NZCFP4U2/citation.html:text/html;p1099-olston (1).pdf:/home/vjovanov/.zotero/zotero/fwqxvpuo.default/zotero/storage/ENTC6BQA/p1099-olston (1).pdf:application/pdf}
},

@inproceedings{moors_generics_2008,
	title = {Generics of a higher kind},
	volume = {43},
	booktitle = {{ACM} {SIGPLAN} Notices},
	author = {Moors, A. and Piessens, F. and Odersky, M.},
	year = {2008},
	pages = {423–438},
	file = {Google Scholar Linked Page:/home/vjovanov/.zotero/zotero/fwqxvpuo.default/zotero/storage/74D9A342/citation.html:text/html;p423-moors.pdf:/home/vjovanov/.zotero/zotero/fwqxvpuo.default/zotero/storage/M9VCH6RK/p423-moors.pdf:application/pdf}
},

@article{stamos_symmetric_1993,
	title = {A symmetric fragment and replicate algorithm for distributed joins},
	volume = {4},
	issn = {1045-9219},
	doi = {10.1109/71.250116},
	abstract = {It is shown that the fragment and replicate {(FR)} distributed join algorithm is a special case of the symmetric fragment and replicate {(SFR)} algorithm, which improves the {FR} algorithm by reducing its communication. The {SFR} algorithm, like the {FR} algorithm, is applicable to N-way joins and nonequijoins and does tuple balancing automatically. The authors derive formulae that show how to minimize the communication in the {SFR} algorithm, discuss its performance on a parallel database prototype, and evaluate its practicality under various conditions. It is claimed that {SFR} improves the worst-case cost for a distributed join, but it will not displace specialized distributed join algorithms when the later are applicable},
	number = {12},
	journal = {{IEEE} Transactions on Parallel and Distributed Systems},
	author = {Stamos, J. W and Young, H. C},
	month = dec,
	year = {1993},
	keywords = {Broadcasting, computational complexity, Computational efficiency, Costs, Database systems, database theory, Distributed algorithms, distributed join, distributed joins, fragment and replicate algorithm, intra transaction parallelism, load balancing, Multicast algorithms, multicast communication, parallel database, Partitioning algorithms, performance evaluation, Prototypes, Relational databases, relational data model, {SFR}, symmetric fragment and replicate, symmetry, tuple balancing, Unicast, worst case cost},
	pages = {1345--1354},
	file = {IEEE Xplore Full Text PDF:/home/vjovanov/.zotero/zotero/fwqxvpuo.default/zotero/storage/5JZ6FJZK/Stamos and Young - 1993 - A symmetric fragment and replicate algorithm for d.pdf:application/pdf}
},

@misc{_paper.pdf_????,
	title = {paper.pdf}
},

@book{bird_pearls_2010-1,
	edition = {1},
	title = {Pearls of Functional Algorithm Design},
	isbn = {0521513383},
	publisher = {Cambridge University Press},
	author = {Bird, Richard},
	month = nov,
	year = {2010},
	keywords = {Functional},
	file = {di-0464.pdf:/home/vjovanov/.zotero/zotero/fwqxvpuo.default/zotero/storage/DJ7RJFBC/di-0464.pdf:application/pdf}
},

@article{jahani_automatic_2011,
	title = {Automatic optimization for {MapReduce} programs},
	volume = {4},
	issn = {2150-8097},
	url = {http://dl.acm.org/citation.cfm?id=1978665.1978670},
	abstract = {The {MapReduce} distributed programming framework has become popular, despite evidence that current implementations are inefficient, requiring far more hardware than a traditional relational databases to complete similar tasks. {MapReduce} jobs are amenable to many traditional database query optimizations {(B+Trees} for selections, column-store-style techniques for projections, etc), but existing systems do not apply them, substantially because free-form user code obscures the true data operation being performed. For example, a selection in {SQL} is easily detected, but a selection in a {MapReduce} program is embedded in Java code along with lots of other program logic. We could ask the programmer to provide explicit hints about the program's data semantics, but one of {MapReduce's} attractions is precisely that it does not ask the user for such information. This paper covers Manimal, which automatically analyzes {MapReduce} programs and applies appropriate data-aware optimizations, thereby requiring no additional help at all from the programmer. We show that Manimal successfully detects optimization opportunities across a range of data operations, and that it yields speedups of up to 1,121\% on previously-written {MapReduce} programs.},
	number = {6},
	journal = {Proc. {VLDB} Endow.},
	author = {Jahani, Eaman and Cafarella, Michael J. and Ré, Christopher},
	month = mar,
	year = {2011},
	pages = {385–396},
	file = {ACM Full Text PDF:/home/vjovanov/.zotero/zotero/fwqxvpuo.default/zotero/storage/FJG2E9FR/Jahani et al. - 2011 - Automatic optimization for MapReduce programs.pdf:application/pdf;p385-jahani (1).pdf:/home/vjovanov/.zotero/zotero/fwqxvpuo.default/zotero/storage/RJ7SNNAT/p385-jahani (1).pdf:application/pdf}
},

@inproceedings{coutts_stream_2007,
	title = {Stream fusion: From lists to streams to nothing at all},
	volume = {42},
	shorttitle = {Stream fusion},
	booktitle = {{ACM} {SIGPLAN} Notices},
	author = {Coutts, D. and Leshchinskiy, R. and Stewart, D.},
	year = {2007},
	keywords = {fusion},
	pages = {315–326},
	file = {[PDF] from metagraph.org:/home/vjovanov/.zotero/zotero/fwqxvpuo.default/zotero/storage/UW8KRM6N/Coutts et al. - 2007 - Stream fusion From lists to streams to nothing at.pdf:application/pdf;Snapshot:/home/vjovanov/.zotero/zotero/fwqxvpuo.default/zotero/storage/9XQMPCTZ/citation.html:text/html}
},

@book{white_hadoop:_2009,
	edition = {Original},
	title = {Hadoop: The Definitive Guide},
	isbn = {0596521979},
	shorttitle = {Hadoop},
	publisher = {{O'Reilly} Media},
	author = {White, Tom},
	month = jun,
	year = {2009},
	keywords = {Technical},
	file = {Hadoop The Definitive Guide 2nd Edition.pdf:/home/vjovanov/.zotero/zotero/fwqxvpuo.default/zotero/storage/UKUB43K3/Hadoop The Definitive Guide 2nd Edition.pdf:application/pdf}
},

@inproceedings{brown_heterogeneous_2011,
	title = {A heterogeneous parallel framework for domain-specific languages},
	booktitle = {Parallel Architectures and Compilation Techniques {(PACT)}, 2011 International Conference on},
	author = {Brown, K. J and Sujeeth, A. K and Lee, H. J and Rompf, T. and Chafi, H. and Odersky, M. and Olukotun, K.},
	year = {2011},
	pages = {89–100},
	file = {[PDF] from stanford.edu:/home/vjovanov/.zotero/zotero/fwqxvpuo.default/zotero/storage/7XPCRVMM/Brown et al. - 2011 - A heterogeneous parallel framework for domain-spec.pdf:application/pdf;Snapshot:/home/vjovanov/.zotero/zotero/fwqxvpuo.default/zotero/storage/IEHHCHCM/abs_all.html:text/html}
},

@book{odersky_scala_2004,
	title = {The Scala Language Specification},
	publisher = {Citeseer},
	author = {Odersky, M. and Altherr, P. and Cremet, V. and Emir, B. and Micheloud, S. and Mihaylov, N. and Schinz, M. and Stenman, E. and Zenger, M.},
	year = {2004},
	file = {ScalaReference.pdf:/home/vjovanov/.zotero/zotero/fwqxvpuo.default/zotero/storage/UJXECPXM/ScalaReference.pdf:application/pdf}
},

@inproceedings{koch_incremental_2010,
	title = {Incremental query evaluation in a ring of databases},
	booktitle = {Proceedings of the twenty-ninth {ACM} {SIGMOD-SIGACT-SIGART} symposium on Principles of database systems of data},
	author = {Koch, C.},
	year = {2010},
	pages = {87–98},
	file = {Google Scholar Linked Page:/home/vjovanov/.zotero/zotero/fwqxvpuo.default/zotero/storage/4P94N5WT/citation.html:text/html}
},

@inproceedings{murray_steno:_2011,
	address = {New York, {NY}, {USA}},
	series = {{PLDI} '11},
	title = {Steno: automatic optimization of declarative queries},
	isbn = {978-1-4503-0663-8},
	shorttitle = {Steno},
	url = {http://doi.acm.org/10.1145/1993498.1993513},
	doi = {10.1145/1993498.1993513},
	abstract = {Declarative queries enable programmers to write data manipulation code without being aware of the underlying data structure implementation. By increasing the level of abstraction over imperative code, they improve program readability and, crucially, create opportunities for automatic parallelization and optimization. For example, the Language Integrated Query {(LINQ)} extensions to C\# allow the same declarative query to process in-memory collections, and datasets that are distributed across a compute cluster. However, our experiments show that the serial performance of declarative code is several times slower than the equivalent hand-optimized code, because it is implemented using run-time abstractions---such as iterators---that incur overhead due to virtual function calls and superfluous instructions. To address this problem, we have developed Steno, which uses a combination of novel and well-known techniques to generate code for declarative queries that is almost as efficient as hand-optimized code. Steno translates a declarative {LINQ} query into type-specialized, inlined and loop-based imperative code. It eliminates chains of iterators from query execution, and optimizes nested queries. We have implemented Steno for uniprocessor, multiprocessor and distributed computing platforms, and show that, for a real-world distributed job, it can almost double the speed of end-to-end execution.},
	booktitle = {Proceedings of the 32nd {ACM} {SIGPLAN} conference on Programming language design and implementation},
	publisher = {{ACM}},
	author = {Murray, Derek Gordon and Isard, Michael and Yu, Yuan},
	year = {2011},
	keywords = {abstract machines, query optimization},
	pages = {121–131},
	file = {ACM Full Text PDF:/home/vjovanov/.zotero/zotero/fwqxvpuo.default/zotero/storage/5CXWSPS7/Murray et al. - 2011 - Steno automatic optimization of declarative queri.pdf:application/pdf;p121-murray (1).pdf:/home/vjovanov/.zotero/zotero/fwqxvpuo.default/zotero/storage/Z23J8DG2/p121-murray (1).pdf:application/pdf}
},

@inproceedings{cafarella_manimal:_2010,
	title = {Manimal: Relational optimization for data-intensive programs},
	shorttitle = {Manimal},
	booktitle = {Procceedings of the 13th International Workshop on the Web and Databases},
	author = {Cafarella, M. J and Ré, C.},
	year = {2010},
	pages = {10},
	file = {a10-cafarella (1).pdf:/home/vjovanov/Downloads/a10-cafarella (1).pdf:application/pdf;[PDF] from umich.edu:/home/vjovanov/.zotero/zotero/fwqxvpuo.default/zotero/storage/J3PMR7M4/Cafarella and Ré - 2010 - Manimal Relational optimization for data-intensiv.pdf:application/pdf;Snapshot:/home/vjovanov/.zotero/zotero/fwqxvpuo.default/zotero/storage/XQQQCU4D/citation.html:text/html}
},

@inproceedings{pavlo_comparison_2009,
	title = {A comparison of approaches to large-scale data analysis},
	booktitle = {Proceedings of the 35th {SIGMOD} international conference on Management of data},
	author = {Pavlo, A. and Paulson, E. and Rasin, A. and Abadi, {D.J.} and {DeWitt}, {D.J.} and Madden, S. and Stonebraker, M.},
	year = {2009},
	pages = {165–178},
	file = {Google Scholar Linked Page:/home/vjovanov/.zotero/zotero/fwqxvpuo.default/zotero/storage/N9JI7FJ7/citation.html:text/html}
},

@article{gray_data_2002,
	title = {Data mining the {SDSS} {SkyServer} database},
	journal = {Arxiv preprint cs/0202014},
	author = {Gray, J. and Szalay, {A.S.} and Thakar, {A.R.} and Kunszt, {P.Z.} and Stoughton, C. and Slutz, D. and {VandenBerg}, J.},
	year = {2002},
	file = {Google Scholar Linked Page:/home/vjovanov/.zotero/zotero/fwqxvpuo.default/zotero/storage/6X45C3TT/0202014.html:text/html}
},

@article{myers_protecting_2000,
	title = {Protecting privacy using the decentralized label model},
	volume = {9},
	number = {4},
	journal = {{ACM} Transactions on Software Engineering and Methodology {(TOSEM)}},
	author = {Myers, {A.C.} and Liskov, B.},
	year = {2000},
	pages = {410–442},
	file = {Google Scholar Linked Page:/home/vjovanov/.zotero/zotero/fwqxvpuo.default/zotero/storage/25SRNQJ4/citation.html:text/html;p410-myers.pdf:/home/vjovanov/.zotero/zotero/fwqxvpuo.default/zotero/storage/B3GZTXIB/p410-myers.pdf:application/pdf}
},

@misc{_kryo_????,
	title = {Kryo},
	url = {http://code.google.com/p/kryo/}
},

@book{okasaki_purely_1999,
	title = {Purely functional data structures},
	publisher = {Cambridge Univ Pr},
	author = {Okasaki, C.},
	year = {1999},
	file = {Google Scholar Linked Page:/home/vjovanov/.zotero/zotero/fwqxvpuo.default/zotero/storage/3K9MAZNT/books.html:text/html}
},

@inproceedings{ghemawat_mapreduce:_2004,
	title = {{MapReduce:} Simplified data processing on large clusters},
	shorttitle = {{MapReduce}},
	booktitle = {Proceedings of the 6th Symposium on Operating System Design and Implementation {(OSDI’04)}, San Francisco, {CA}, {USA}},
	author = {Ghemawat, S. and Dean, J.},
	year = {2004},
	file = {Google Scholar Linked Page:/home/vjovanov/.zotero/zotero/fwqxvpuo.default/zotero/storage/UXWMBUKQ/Ghemawat and Dean - 2004 - MapReduce Simplified data processing on large clu.pdf:application/pdf}
},

@article{agarwal_re-optimizing_????,
	title = {Re-optimizing {Data-Parallel} Computing},
	author = {Agarwal, S. and Kandula, S. and Bruno, N. and Wu, M. C and Stoica, I. and Zhou, J.},
	file = {[PDF] from berkeley.edu:/home/vjovanov/.zotero/zotero/fwqxvpuo.default/zotero/storage/F3J9AM5W/Agarwal et al. - Re-optimizing Data-Parallel Computing.pdf:application/pdf}
},

@article{pike_interpreting_2005,
	title = {Interpreting the data: Parallel analysis with Sawzall},
	volume = {13},
	shorttitle = {Interpreting the data},
	number = {4},
	journal = {Scientific Programming},
	author = {Pike, R. and Dorward, S. and Griesemer, R. and Quinlan, S.},
	year = {2005},
	pages = {277–298},
	file = {Google Scholar Linked Page:/home/vjovanov/.zotero/zotero/fwqxvpuo.default/zotero/storage/MSKWWCHH/citation.html:text/html;sawzall-sciprog (1).pdf:/home/vjovanov/.zotero/zotero/fwqxvpuo.default/zotero/storage/KFFRIS48/sawzall-sciprog (1).pdf:application/pdf}
},

@inproceedings{warneke_nephele:_2009,
	title = {Nephele: efficient parallel data processing in the cloud},
	shorttitle = {Nephele},
	booktitle = {Proceedings of the 2nd Workshop on {Many-Task} Computing on Grids and Supercomputers},
	author = {Warneke, D. and Kao, O.},
	year = {2009},
	pages = {8},
	file = {a8-warneke.pdf:/home/vjovanov/.zotero/zotero/fwqxvpuo.default/zotero/storage/G2IH8H7S/a8-warneke.pdf:application/pdf;Google Scholar Linked Page:/home/vjovanov/.zotero/zotero/fwqxvpuo.default/zotero/storage/MDGDCRZJ/citation.html:text/html}
},

@inproceedings{ekanayake_twister:_2010,
	address = {New York, {NY}, {USA}},
	series = {{HPDC} '10},
	title = {Twister: a runtime for iterative {MapReduce}},
	isbn = {978-1-60558-942-8},
	shorttitle = {Twister},
	url = {http://doi.acm.org/10.1145/1851476.1851593},
	doi = {10.1145/1851476.1851593},
	abstract = {{MapReduce} programming model has simplified the implementation of many data parallel applications. The simplicity of the programming model and the quality of services provided by many implementations of {MapReduce} attract a lot of enthusiasm among distributed computing communities. From the years of experience in applying {MapReduce} to various scientific applications we identified a set of extensions to the programming model and improvements to its architecture that will expand the applicability of {MapReduce} to more classes of applications. In this paper, we present the programming model and the architecture of Twister an enhanced {MapReduce} runtime that supports iterative {MapReduce} computations efficiently. We also show performance comparisons of Twister with other similar runtimes such as Hadoop and {DryadLINQ} for large scale data parallel applications.},
	booktitle = {Proceedings of the 19th {ACM} International Symposium on High Performance Distributed Computing},
	publisher = {{ACM}},
	author = {Ekanayake, Jaliya and Li, Hui and Zhang, Bingjing and Gunarathne, Thilina and Bae, {Seung-Hee} and Qiu, Judy and Fox, Geoffrey},
	year = {2010},
	keywords = {cloud technologies, iterative algorithms, mapreduce},
	pages = {810–818},
	file = {ACM Full Text PDF:/home/vjovanov/.zotero/zotero/fwqxvpuo.default/zotero/storage/IZ8E9B4W/Ekanayake et al. - 2010 - Twister a runtime for iterative MapReduce.pdf:application/pdf}
},

@misc{_linq_????,
	title = {{LINQ} {(Language-Integrated} Query)},
	url = {http://msdn.microsoft.com/en-us/library/bb397926.aspx}
},

@inproceedings{hindman_mesos:_2011,
	title = {Mesos: A platform for fine-grained resource sharing in the data center},
	shorttitle = {Mesos},
	booktitle = {Proceedings of {NSDI}},
	author = {Hindman, B. and Konwinski, A. and Zaharia, M. and Ghodsi, A. and Joseph, A. D and Katz, R. and Shenker, S. and Stoica, I.},
	year = {2011},
	file = {[PDF] from usenix.org:/home/vjovanov/.zotero/zotero/fwqxvpuo.default/zotero/storage/TNPQEDJ5/Hindman et al. - 2011 - Mesos A platform for fine-grained resource sharin.pdf:application/pdf}
},

@inproceedings{battre_nephele/pacts:_2010,
	title = {{Nephele/PACTs:} a programming model and execution framework for web-scale analytical processing},
	shorttitle = {{Nephele/PACTs}},
	booktitle = {Proceedings of the 1st {ACM} symposium on Cloud computing},
	author = {Battré, D. and Ewen, S. and Hueske, F. and Kao, O. and Markl, V. and Warneke, D.},
	year = {2010},
	pages = {119–130},
	file = {Google Scholar Linked Page:/home/vjovanov/.zotero/zotero/fwqxvpuo.default/zotero/storage/X479ATQI/citation.html:text/html;p119-battre.pdf:/home/vjovanov/.zotero/zotero/fwqxvpuo.default/zotero/storage/HDTHRS7X/p119-battre.pdf:application/pdf}
},

@article{borthakur_hadoop_2007,
	title = {The hadoop distributed file system: Architecture and design},
	shorttitle = {The hadoop distributed file system},
	journal = {Hadoop Project Website},
	author = {Borthakur, D.},
	year = {2007},
	file = {Google Scholar Linked Page:/home/vjovanov/.zotero/zotero/fwqxvpuo.default/zotero/storage/BZACB9CV/Borthakur - 2007 - The hadoop distributed file system Architecture a.pdf:application/pdf}
},

@book{pierce_advanced_2004,
	edition = {1},
	title = {Advanced Topics in Types and Programming Languages},
	isbn = {0262162288},
	publisher = {The {MIT} Press},
	author = {Pierce, Benjamin C.},
	month = dec,
	year = {2004}
},

@misc{_scala_????,
	address = {www.scala-lang.org},
	title = {The Scala Language},
	url = {www.scala-lang.org}
},

@article{warneke_exploiting_2011,
	title = {Exploiting Dynamic Resource Allocation for Efficient Parallel Data Processing in the Cloud},
	journal = {{IEEE} Transactions on Parallel and Distributed Systems},
	author = {Warneke, D. and Kao, O.},
	year = {2011},
	pages = {1},
	file = {Google Scholar Linked Page:/home/vjovanov/.zotero/zotero/fwqxvpuo.default/zotero/storage/DTA9MRGC/Warneke and Kao - 2011 - Exploiting Dynamic Resource Allocation for Efficie.pdf:application/pdf}
},

@article{buettner_dewdrop:_2011,
	title = {Dewdrop: an energy-aware runtime for computational {RFID}},
	shorttitle = {Dewdrop},
	journal = {{NSDI} 2011},
	author = {Buettner, M. and Greenstein, B. and Wetherall, D.},
	year = {2011},
	file = {[PDF] from usenix.org:/home/vjovanov/.zotero/zotero/fwqxvpuo.default/zotero/storage/G8IGPT5V/Buettner et al. - 2011 - Dewdrop an energy-aware runtime for computational.pdf:application/pdf}
},

@inproceedings{yu_distributed_2009,
	title = {Distributed aggregation for data-parallel computing: interfaces and implementations},
	shorttitle = {Distributed aggregation for data-parallel computing},
	booktitle = {Proceedings of the {ACM} {SIGOPS} 22nd symposium on Operating systems principles},
	author = {Yu, Y. and Gunda, {P.K.} and Isard, M.},
	year = {2009},
	pages = {247–260},
	file = {Google Scholar Linked Page:/home/vjovanov/.zotero/zotero/fwqxvpuo.default/zotero/storage/IT2UFP92/Yu et al. - 2009 - Distributed aggregation for data-parallel computin.pdf:application/pdf}
},

@article{halstead_new_1990,
	title = {New ideas in parallel lisp: Language design, implementation, and programming tools},
	shorttitle = {New ideas in parallel lisp},
	journal = {Parallel Lisp: Languages and Systems},
	author = {Halstead, R.},
	year = {1990},
	pages = {1–57}
},

@inproceedings{yang_map-reduce-merge:_2007,
	title = {Map-reduce-merge: simplified relational data processing on large clusters},
	shorttitle = {Map-reduce-merge},
	booktitle = {Proceedings of the 2007 {ACM} {SIGMOD} international conference on Management of data},
	author = {Yang, H. and Dasdan, A. and Hsiao, {R.L.} and Parker, {D.S.}},
	year = {2007},
	pages = {1029–1040},
	file = {Google Scholar Linked Page:/home/vjovanov/.zotero/zotero/fwqxvpuo.default/zotero/storage/HMJJBETA/citation.html:text/html}
},

@book{hindley_lambda-calculus_2008,
	edition = {2},
	title = {{Lambda-Calculus} and Combinators: An Introduction},
	isbn = {0521898854},
	shorttitle = {{Lambda-Calculus} and Combinators},
	publisher = {Cambridge University Press},
	author = {Hindley, J. Roger and Seldin, Jonathan P.},
	month = aug,
	year = {2008},
	file = {Lambda-Calculus and Combinators.pdf:/home/vjovanov/.zotero/zotero/fwqxvpuo.default/zotero/storage/GZWITAMA/Lambda-Calculus and Combinators.pdf:application/pdf}
},

@inproceedings{iu_hadooptosql:_2010,
	address = {New York, {NY}, {USA}},
	series = {{EuroSys} '10},
	title = {{HadoopToSQL:} a {mapReduce} query optimizer},
	isbn = {978-1-60558-577-2},
	shorttitle = {{HadoopToSQL}},
	url = {http://doi.acm.org/10.1145/1755913.1755939},
	doi = {10.1145/1755913.1755939},
	abstract = {{MapReduce} is a cost-effective way to achieve scalable performance for many log-processing workloads. These workloads typically process their entire dataset. {MapReduce} can be inefficient, however, when handling business-oriented workloads, especially when these workloads access only a subset of the data. {HadoopToSQL} seeks to improve {MapReduce} performance for the latter class of workloads by transforming {MapReduce} queries to use the indexing, aggregation and grouping features provided by {SQL} databases. It statically analyzes the computation performed by the {MapReduce} queries. The static analysis uses symbolic execution to derive preconditions and postconditions for the map and reduce functions. It then uses this information either to generate input restrictions, which avoid scanning the entire dataset, or to generate equivalent {SQL} queries, which take advantage of {SQL} grouping and aggregation features. We demonstrate the performance of {MapReduce} queries, when optimized by {HadoopToSQL}, by both single-node and cluster experiments. {HadoopToSQL} always improves performance over {MapReduce} and approximates that of hand-written {SQL.}},
	booktitle = {Proceedings of the 5th European conference on Computer systems},
	publisher = {{ACM}},
	author = {Iu, {Ming-Yee} and Zwaenepoel, Willy},
	year = {2010},
	keywords = {dc-dsl, mapreduce, query optimization, sql, symbolic execution},
	pages = {251–264},
	file = {ACM Full Text PDF:/home/vjovanov/.zotero/zotero/fwqxvpuo.default/zotero/storage/GDA96MSZ/Iu and Zwaenepoel - 2010 - HadoopToSQL a mapReduce query optimizer.pdf:application/pdf;p251-iu.pdf:/home/vjovanov/.zotero/zotero/fwqxvpuo.default/zotero/storage/NUZDH2QK/p251-iu.pdf:application/pdf}
},

@article{thusoo_hive:_2009,
	title = {Hive: a warehousing solution over a map-reduce framework},
	volume = {2},
	issn = {2150-8097},
	shorttitle = {Hive},
	url = {http://dl.acm.org/citation.cfm?id=1687553.1687609},
	abstract = {The size of data sets being collected and analyzed in the industry for business intelligence is growing rapidly, making traditional warehousing solutions prohibitively expensive. Hadoop [3] is a popular open-source map-reduce implementation which is being used as an alternative to store and process extremely large data sets on commodity hardware. However, the map-reduce programming model is very low level and requires developers to write custom programs which are hard to maintain and reuse.},
	number = {2},
	journal = {Proc. {VLDB} Endow.},
	author = {Thusoo, Ashish and Sarma, Joydeep Sen and Jain, Namit and Shao, Zheng and Chakka, Prasad and Anthony, Suresh and Liu, Hao and Wyckoff, Pete and Murthy, Raghotham},
	month = aug,
	year = {2009},
	pages = {1626–1629},
	file = {ACM Full Text PDF:/home/vjovanov/.zotero/zotero/fwqxvpuo.default/zotero/storage/RWITMAJG/Thusoo et al. - 2009 - Hive a warehousing solution over a map-reduce fra.pdf:application/pdf}
},

@inproceedings{green_provenance_2007,
	title = {Provenance semirings},
	booktitle = {Proceedings of the twenty-sixth {ACM} {SIGMOD-SIGACT-SIGART} symposium on Principles of database systems},
	author = {Green, {T.J.} and Karvounarakis, G. and Tannen, V.},
	year = {2007},
	pages = {31–40},
	file = {Google Scholar Linked Page:/home/vjovanov/.zotero/zotero/fwqxvpuo.default/zotero/storage/XB867SM4/citation.html:text/html}
},

@inproceedings{thusoo_hive_2010,
	title = {Hive - a petabyte scale data warehouse using Hadoop},
	doi = {10.1109/ICDE.2010.5447738},
	abstract = {The size of data sets being collected and analyzed in the industry for business intelligence is growing rapidly, making traditional warehousing solutions prohibitively expensive. Hadoop is a popular open-source map-reduce implementation which is being used in companies like Yahoo, Facebook etc. to store and process extremely large data sets on commodity hardware. However, the map-reduce programming model is very low level and requires developers to write custom programs which are hard to maintain and reuse. In this paper, we present Hive, an open-source data warehousing solution built on top of Hadoop. Hive supports queries expressed in a {SQL-like} declarative language - {HiveQL}, which are compiled into map-reduce jobs that are executed using Hadoop. In addition, {HiveQL} enables users to plug in custom map-reduce scripts into queries. The language includes a type system with support for tables containing primitive types, collections like arrays and maps, and nested compositions of the same. The underlying {IO} libraries can be extended to query data in custom formats. Hive also includes a system catalog - Metastore - that contains schemas and statistics, which are useful in data exploration, query optimization and query compilation. In Facebook, the Hive warehouse contains tens of thousands of tables and stores over {700TB} of data and is being used extensively for both reporting and ad-hoc analyses by more than 200 users per month.},
	booktitle = {Data Engineering {(ICDE)}, 2010 {IEEE} 26th International Conference on},
	author = {Thusoo, A. and Sarma, {J.S.} and Jain, N. and Shao, Zheng and Chakka, P. and Zhang, Ning and Antony, S. and Liu, Hao and Murthy, R.},
	month = mar,
	year = {2010},
	keywords = {{catalog;SQL-like}, compilation;query, compositions;open-source, data, declarative, domain, exploration;map-reduce, Hadoop, implementation;petabyte, intelligence;data, jobs;maps;nested, language;arrays;business, {language;Metastore}, map-reduce, {optimization;SQL;competitive}, processing;, scale, {software;HiveQL}, software;query, system, types;query, warehouse;primitive, warehouses;public},
	pages = {996 --1005},
	file = {IEEE Xplore Abstract Record:/home/vjovanov/.zotero/zotero/fwqxvpuo.default/zotero/storage/67629TCV/stamp.html:text/html;IEEE Xplore Full Text PDF:/home/vjovanov/.zotero/zotero/fwqxvpuo.default/zotero/storage/XIQAIQDU/Thusoo et al. - 2010 - Hive - a petabyte scale data warehouse using Hadoo.pdf:application/pdf}
},

@inproceedings{stonebraker_end_2007,
	title = {The end of an architectural era:(it's time for a complete rewrite)},
	shorttitle = {The end of an architectural era},
	booktitle = {Proceedings of the 33rd international conference on Very large data bases},
	author = {Stonebraker, M. and Madden, S. and Abadi, {D.J.} and Harizopoulos, S. and Hachem, N. and Helland, P.},
	year = {2007},
	pages = {1150–1160},
	file = {Google Scholar Linked Page:/home/vjovanov/.zotero/zotero/fwqxvpuo.default/zotero/storage/QSD74E56/citation.html:text/html;p1150-stonebraker.pdf:/home/vjovanov/.zotero/zotero/fwqxvpuo.default/zotero/storage/6PPINXTX/p1150-stonebraker.pdf:application/pdf}
},

@article{abouzeid_hadoopdb:_2009,
	title = {{HadoopDB:} An architectural hybrid of {MapReduce} and {DBMS} technologies for analytical workloads},
	volume = {2},
	shorttitle = {{HadoopDB}},
	number = {1},
	journal = {Proceedings of the {VLDB} Endowment},
	author = {Abouzeid, A. and {Bajda-Pawlikowski}, K. and Abadi, D. and Silberschatz, A. and Rasin, A.},
	year = {2009},
	pages = {922–933},
	file = {Google Scholar Linked Page:/home/vjovanov/.zotero/zotero/fwqxvpuo.default/zotero/storage/BFQFB27Q/citation.html:text/html}
},

@article{gates_building_2009,
	title = {Building a high-level dataflow system on top of {Map-Reduce:} the Pig experience},
	volume = {2},
	shorttitle = {Building a high-level dataflow system on top of {Map-Reduce}},
	number = {2},
	journal = {Proceedings of the {VLDB} Endowment},
	author = {Gates, {A.F.} and Natkovich, O. and Chopra, S. and Kamath, P. and Narayanamurthy, {S.M.} and Olston, C. and Reed, B. and Srinivasan, S. and Srivastava, U.},
	year = {2009},
	pages = {1414–1425},
	file = {Google Scholar Linked Page:/home/vjovanov/.zotero/zotero/fwqxvpuo.default/zotero/storage/JUQMWKQ5/citation.html:text/html}
},

@inproceedings{bierman_lost_2007,
	title = {Lost in translation: formalizing proposed extensions to c\#},
	volume = {42},
	shorttitle = {Lost in translation},
	booktitle = {{ACM} {SIGPLAN} Notices},
	author = {Bierman, G. M and Meijer, E. and Torgersen, M.},
	year = {2007},
	pages = {479–498},
	file = {[PDF] from microsoft.com:/home/vjovanov/.zotero/zotero/fwqxvpuo.default/zotero/storage/PGIBNPVZ/Bierman et al. - 2007 - Lost in translation formalizing proposed extensio.pdf:application/pdf;Snapshot:/home/vjovanov/.zotero/zotero/fwqxvpuo.default/zotero/storage/AAF2B72T/citation.html:text/html}
},

@inproceedings{zaharia_spark:_2010,
	title = {Spark: Cluster computing with working sets},
	shorttitle = {Spark},
	booktitle = {Proceedings of the 2nd {USENIX} conference on Hot topics in cloud computing},
	author = {Zaharia, M. and Chowdhury, M. and Franklin, {M.J.} and Shenker, S. and Stoica, I.},
	year = {2010},
	pages = {10–10},
	file = {Google Scholar Linked Page:/home/vjovanov/.zotero/zotero/fwqxvpuo.default/zotero/storage/BG9IW92W/citation.html:text/html;hotcloud_spark (2).pdf:/home/vjovanov/.zotero/zotero/fwqxvpuo.default/zotero/storage/34AD7PWA/hotcloud_spark (2).pdf:application/pdf}
},

@inproceedings{filinski_monads_2010,
	title = {Monads in action},
	volume = {45},
	booktitle = {{ACM} {SIGPLAN} Notices},
	author = {Filinski, A.},
	year = {2010},
	pages = {483–494},
	file = {Google Scholar Linked Page:/home/vjovanov/.zotero/zotero/fwqxvpuo.default/zotero/storage/UC9XTVHU/citation.html:text/html}
},

@misc{_dbgen_????,
	title = {{DbGen}},
	url = {http://dbgen.sourceforge.net/}
},

@misc{_scala_????-1,
	title = {Scala benchmarking},
	file = {res068-sewe.pdf:/home/vjovanov/.zotero/zotero/fwqxvpuo.default/zotero/storage/CT6FGMDD/res068-sewe.pdf:application/pdf}
},

@inproceedings{moors_scala-virtualized_2012,
	title = {Scala-virtualized},
	booktitle = {Proceedings of the {ACM} {SIGPLAN} 2012 workshop on Partial evaluation and program manipulation},
	author = {Moors, A. and Rompf, T. and Haller, P. and Odersky, M.},
	year = {2012},
	pages = {117–120},
	file = {Snapshot:/home/vjovanov/.zotero/zotero/fwqxvpuo.default/zotero/storage/SR8STTAS/citation.html:text/html}
},

@article{rompf_lightweight_2012,
	title = {Lightweight modular staging: a pragmatic approach to runtime code generation and compiled {DSLs}},
	volume = {55},
	shorttitle = {Lightweight modular staging},
	number = {6},
	journal = {Communications of the {ACM}},
	author = {Rompf, T. and Odersky, M.},
	year = {2012},
	pages = {121–130},
	file = {Snapshot:/home/vjovanov/.zotero/zotero/fwqxvpuo.default/zotero/storage/8QPUSTIT/citation.html:text/html}
},

@article{rompf_building-blocks_2011,
	title = {{Building-Blocks} for Performance Oriented {DSLs}},
	journal = {Arxiv preprint {arXiv:1109.0778}},
	author = {Rompf, T. and Sujeeth, {A.K.} and Lee, {H.J.} and Brown, {K.J.} and Chafi, H. and Odersky, M. and Olukotun, K.},
	year = {2011},
	file = {1109.0778v1:/home/vjovanov/.zotero/zotero/fwqxvpuo.default/zotero/storage/Z2G8H5UB/1109.0778v1:application/pdf;Google Scholar Linked Page:/home/vjovanov/.zotero/zotero/fwqxvpuo.default/zotero/storage/8ZT9XSWA/1109.html:text/html}
},

@article{rompf_implementing_2009,
	title = {Implementing first-class polymorphic delimited continuations by a type-directed selective {CPS-transform}},
	volume = {44},
	number = {9},
	journal = {{ACM} {SIGPLAN} Notices},
	author = {Rompf, T. and Maier, I. and Odersky, M.},
	year = {2009},
	pages = {317–328},
	file = {continuations-icfp09.pdf:/home/vjovanov/.zotero/zotero/fwqxvpuo.default/zotero/storage/49EP92A7/continuations-icfp09.pdf:application/pdf;Google Scholar Linked Page:/home/vjovanov/.zotero/zotero/fwqxvpuo.default/zotero/storage/IJ4HRCBI/citation.html:text/html}
},

@techreport{yu_sample_2008,
	title = {Some sample programs written in {DryadLINQ}},
	institution = {Tech. Rep. {MSR-TR-2008-74}, Microsoft Research},
	author = {Yu, Y. and Isard, M. and Fetterly, D. and Budiu, M. and Erlingsson, Ú. and Gunda, {P.K.} and Currey, J. and {McSherry}, F. and Achan, K.},
	year = {2008},
	file = {Google Scholar Linked Page:/home/vjovanov/.zotero/zotero/fwqxvpuo.default/zotero/storage/A4FPH2XF/default.html:text/html;programming-dryadlinq-dec2009.pdf:/home/vjovanov/.zotero/zotero/fwqxvpuo.default/zotero/storage/IBQEZRZF/programming-dryadlinq-dec2009.pdf:application/pdf}
},

@book{odersky_programming_2008,
	edition = {{1St} Edition},
	title = {Programming in Scala: A Comprehensive Step-by-step Guide},
	isbn = {0981531601},
	shorttitle = {Programming in Scala},
	publisher = {Artima Inc},
	author = {Odersky, Martin and Spoon, Lex and Venners, Bill},
	month = nov,
	year = {2008},
	annote = {Chapter 10. Composition and Inheritance

 

 

 },
	annote = {Chapter 11. Scala Class Hierarchy

Base class of all Scala classes is Any which defines:

final ==, final !=, {toString}, {hashCode} and equals

Has subclasses {AnyVal} and {AnyRef} for primitive types and references respectively. {AnyVals} are automatically converted to primitive values by the compiler, have implicit conversion to their rich versions and to their alternative representations {(Char} -{\textgreater} Int).

Null is subtype of all {AnyRefs} and has a singleton instance null

Nothing is a subtype of every other type and it does not have and instance so it is used show abnormal termination (exceptions)},
	annote = {Chapter 12. Traits

Traits are a fundamental unit of code reuse. They are very similar to classes with two exceptions:

    Traits can not have constructors
    Super calls are dynamically bound

Unlike java interfaces which intrinsically make a tradeoff between client side usability and interface implementers amount of boilerplate. Traits brake this barrier by having method implementation and fields provided. Good example would be {Ordered[T]} which requires only one method to be implemented but provides many ordering methods ({\textgreater}=, {\textless}=, {\textless}, {\textgreater} etc.)

Dynamic super reference enables Stackable Modifications. Stacable Modifications are enabled by having traits that extend the abstract class and call the same method on super instance. The method in trait must be declared as abstract override. The order of stackable modifications is from left to right (the rightest  trait mixed in will be executed first).

Stackable modifications are the nice way to implement the wrapper pattern.

 

Multiple inheritance problems with Scala traits are resolved by linearizing types. {TODO}

 

When to use traits
},
	file = {Programming in Scala.pdf:/home/vjovanov/.zotero/zotero/fwqxvpuo.default/zotero/storage/S3RUZJGR/Programming in Scala.pdf:application/pdf}
},

@inproceedings{meijer_linq_2006,
	title = {{LINQ}},
	isbn = {1595934340},
	url = {http://dl.acm.org/citation.cfm?id=1142473.1142552},
	doi = {10.1145/1142473.1142552},
	publisher = {{ACM} Press},
	author = {Meijer, Erik and Beckman, Brian and Bierman, Gavin},
	year = {2006},
	pages = {706},
	file = {LINQ:/home/vjovanov/.zotero/zotero/fwqxvpuo.default/zotero/storage/MWSD4WTI/citation.html:text/html;p706-meijer.pdf:/home/vjovanov/.zotero/zotero/fwqxvpuo.default/zotero/storage/7E57TU2G/p706-meijer.pdf:application/pdf}
},

@book{cormen_introduction_2009,
	edition = {third edition},
	title = {Introduction to Algorithms},
	isbn = {0262033844},
	publisher = {The {MIT} Press},
	author = {Cormen, Thomas H. and Leiserson, Charles E. and Rivest, Ronald L. and Stein, Clifford},
	month = jul,
	year = {2009},
	keywords = {Algorithms, Basic},
	file = {MIT.Introduction.to.Algorithms.3rd.Edition.Sep.2009.pdf:/home/vjovanov/.zotero/zotero/fwqxvpuo.default/zotero/storage/4AJ75KKE/MIT.Introduction.to.Algorithms.3rd.Edition.Sep.2009.pdf:application/pdf}
},

@article{alexandrov_massively_2010,
	title = {Massively parallel data analysis with {PACTs} on Nephele},
	volume = {3},
	number = {1-2},
	journal = {Proceedings of the {VLDB} Endowment},
	author = {Alexandrov, A. and Heimel, M. and Markl, V. and Battré, D. and Hueske, F. and Nijkamp, E. and Ewen, S. and Kao, O. and Warneke, D.},
	year = {2010},
	pages = {1625–1628},
	file = {Google Scholar Linked Page:/home/vjovanov/.zotero/zotero/fwqxvpuo.default/zotero/storage/TSPSTD73/citation.html:text/html;p1625-alexandrov.pdf:/home/vjovanov/.zotero/zotero/fwqxvpuo.default/zotero/storage/XCRNCGT2/p1625-alexandrov.pdf:application/pdf}
},

@misc{nicta_scoobi_2012,
	title = {Scoobi},
	url = {http://nicta.github.com/scoobi/},
	author = {{NICTA}, Zaharia},
	year = {2012}
},

@article{pottier_information_2000,
	title = {Information flow inference for free},
	volume = {35},
	number = {9},
	journal = {{ACM} {SIGPLAN} Notices},
	author = {Pottier, F. and Conchon, S.},
	year = {2000},
	pages = {46–57},
	file = {Google Scholar Linked Page:/home/vjovanov/.zotero/zotero/fwqxvpuo.default/zotero/storage/NUTC78DW/citation.html:text/html;pottier-conchon-icfp00.pdf:/home/vjovanov/.zotero/zotero/fwqxvpuo.default/zotero/storage/IGUWWSB9/pottier-conchon-icfp00.pdf:application/pdf}
},

@misc{_crunch_2012,
	title = {Crunch},
	url = {https://github.com/cloudera/crunch},
	publisher = {Cloudera},
	year = {2012}
},

@article{dean_mapreduce:_2008,
	title = {{MapReduce:} Simplified data processing on large clusters},
	volume = {51},
	shorttitle = {{MapReduce}},
	number = {1},
	journal = {Communications of the {ACM}},
	author = {Dean, J. and Ghemawat, S.},
	year = {2008},
	keywords = {Google Research, Large Scale Processing Frameworks},
	pages = {107–113},
	annote = {Problems with {MapReduce} {(Hadoop):}

 

Long job startup time due to fault tolerance protocols.

Map and reduce phase tied together},
	file = {Google Scholar Linked Page:/home/vjovanov/.zotero/zotero/fwqxvpuo.default/zotero/storage/JXEATG5H/citation.html:text/html;p107-dean.pdf:/home/vjovanov/.zotero/zotero/fwqxvpuo.default/zotero/storage/SSM3BP55/p107-dean.pdf:application/pdf}
},

@inproceedings{yu_dryadlinq:_2008-1,
	title = {{DryadLINQ:} A system for general-purpose distributed data-parallel computing using a high-level language},
	shorttitle = {{DryadLINQ}},
	booktitle = {Proceedings of the 8th {USENIX} conference on Operating systems design and implementation},
	author = {Yu, Y. and Isard, M. and Fetterly, D. and Budiu, M. and Erlingsson, U. and Gunda, {P.K.} and Currey, J.},
	year = {2008},
	pages = {1–14},
	file = {dryadlinq-osdi.pptx:/home/vjovanov/.zotero/zotero/fwqxvpuo.default/zotero/storage/HKJGBWBB/dryadlinq-osdi.pptx:application/vnd.oasis.opendocument.text;dryadlinq.pdf:/home/vjovanov/.zotero/zotero/fwqxvpuo.default/zotero/storage/H45SA2HP/dryadlinq.pdf:application/pdf;dryad-talk-parc.pptx:/home/vjovanov/.zotero/zotero/fwqxvpuo.default/zotero/storage/ZBANVNT2/dryad-talk-parc.pptx:application/vnd.oasis.opendocument.text;Google Scholar Linked Page:/home/vjovanov/.zotero/zotero/fwqxvpuo.default/zotero/storage/PPJCDG66/citation.html:text/html}
},

@article{stamos_symmetric_1993-1,
	title = {A symmetric fragment and replicate algorithm for distributed joins},
	volume = {4},
	number = {12},
	journal = {Parallel and Distributed Systems, {IEEE} Transactions on},
	author = {Stamos, {J.W.} and Young, {H.C.}},
	year = {1993},
	pages = {1345–1354},
	file = {00250116.pdf:/home/vjovanov/.zotero/zotero/fwqxvpuo.default/zotero/storage/GN9VZ6PG/00250116.pdf:application/pdf;Google Scholar Linked Page:/home/vjovanov/.zotero/zotero/fwqxvpuo.default/zotero/storage/6SEQNW8W/abs_all.html:text/html}
},

@inproceedings{thusoo_hive-petabyte_2010,
	title = {Hive-a petabyte scale data warehouse using hadoop},
	booktitle = {Data Engineering {(ICDE)}, 2010 {IEEE} 26th International Conference on},
	author = {Thusoo, A. and Sarma, J. S and Jain, N. and Shao, Z. and Chakka, P. and Zhang, N. and Antony, S. and Liu, H. and Murthy, R.},
	year = {2010},
	pages = {996–1005},
	file = {05447738.pdf:/home/vjovanov/.zotero/zotero/fwqxvpuo.default/zotero/storage/8FUWIIXM/05447738.pdf:application/pdf;[PDF] from kuleuven.be:/home/vjovanov/.zotero/zotero/fwqxvpuo.default/zotero/storage/BFPAXTFX/Thusoo et al. - 2010 - Hive-a petabyte scale data warehouse using hadoop.pdf:application/pdf;Snapshot:/home/vjovanov/.zotero/zotero/fwqxvpuo.default/zotero/storage/TXVARJSE/abs_all.html:text/html}
},

@inproceedings{malewicz_pregel:_2010,
	title = {Pregel: a system for large-scale graph processing},
	shorttitle = {Pregel},
	booktitle = {Proceedings of the 2010 international conference on Management of data},
	author = {Malewicz, G. and Austern, M. H and Bik, A. {J.C} and Dehnert, J. C and Horn, I. and Leiser, N. and Czajkowski, G.},
	year = {2010},
	pages = {135–146},
	file = {Google Scholar Linked Page:/home/vjovanov/.zotero/zotero/fwqxvpuo.default/zotero/storage/8252R9W5/citation.html:text/html;p135-malewicz.pdf:/home/vjovanov/.zotero/zotero/fwqxvpuo.default/zotero/storage/NWSN9GSJ/p135-malewicz.pdf:application/pdf}
},

@book{pierce_basic_1991,
	edition = {1},
	title = {Basic Category Theory for Computer Scientists},
	isbn = {0262660717},
	publisher = {The {MIT} Press},
	author = {Pierce, Benjamin C.},
	month = aug,
	year = {1991},
	file = {Basic Category Theory for Computer Scientists - B. Pierce.djv:/home/vjovanov/.zotero/zotero/fwqxvpuo.default/zotero/storage/TTXQV3UQ/Basic Category Theory for Computer Scientists - B. Pierce.djv:image/vnd.djvu}
},

@inproceedings{selinger_access_1979,
	title = {Access path selection in a relational database management system},
	booktitle = {Proceedings of the 1979 {ACM} {SIGMOD} international conference on Management of data},
	author = {Selinger, {P.G.} and Astrahan, {M.M.} and Chamberlin, {D.D.} and Lorie, {R.A.} and Price, {T.G.}},
	year = {1979},
	pages = {23–34},
	file = {Google Scholar Linked Page:/home/vjovanov/.zotero/zotero/fwqxvpuo.default/zotero/storage/FSTVSZ4Z/citation.html:text/html;p23-selinger.pdf:/home/vjovanov/.zotero/zotero/fwqxvpuo.default/zotero/storage/FX5K6M2J/p23-selinger.pdf:application/pdf}
},

@article{thusoo_hive:_2009-1,
	title = {Hive: a warehousing solution over a map-reduce framework},
	volume = {2},
	issn = {2150-8097},
	shorttitle = {Hive},
	url = {http://dl.acm.org/citation.cfm?id=1687553.1687609},
	abstract = {The size of data sets being collected and analyzed in the industry for business intelligence is growing rapidly, making traditional warehousing solutions prohibitively expensive. Hadoop [3] is a popular open-source map-reduce implementation which is being used as an alternative to store and process extremely large data sets on commodity hardware. However, the map-reduce programming model is very low level and requires developers to write custom programs which are hard to maintain and reuse.},
	number = {2},
	journal = {Proc. {VLDB} Endow.},
	author = {Thusoo, Ashish and Sarma, Joydeep Sen and Jain, Namit and Shao, Zheng and Chakka, Prasad and Anthony, Suresh and Liu, Hao and Wyckoff, Pete and Murthy, Raghotham},
	month = aug,
	year = {2009},
	pages = {1626–1629},
	file = {ACM Full Text PDF:/home/vjovanov/.zotero/zotero/fwqxvpuo.default/zotero/storage/DUATR342/Thusoo et al. - 2009 - Hive a warehousing solution over a map-reduce fra.pdf:application/pdf}
},

@article{dittrich_hadoop++:_2010,
	title = {Hadoop++: making a yellow elephant run like a cheetah (without it even noticing)},
	volume = {3},
	issn = {2150-8097},
	shorttitle = {Hadoop++},
	url = {http://dl.acm.org/citation.cfm?id=1920841.1920908},
	abstract = {{MapReduce} is a computing paradigm that has gained a lot of attention in recent years from industry and research. Unlike parallel {DBMSs}, {MapReduce} allows non-expert users to run complex analytical tasks over very large data sets on very large clusters and clouds. However, this comes at a price: {MapReduce} processes tasks in a scan-oriented fashion. Hence, the performance of Hadoop --- an open-source implementation of {MapReduce} --- often does not match the one of a well-configured parallel {DBMS.} In this paper we propose a new type of system named Hadoop++: it boosts task performance without changing the Hadoop framework at all {(Hadoop} does not even 'notice it'). To reach this goal, rather than changing a working system {(Hadoop)}, we inject our technology at the right places through {UDFs} only and affect Hadoop from inside. This has three important consequences: First, Hadoop++ significantly outperforms Hadoop. Second, any future changes of Hadoop may directly be used with Hadoop++ without rewriting any glue code. Third, Hadoop++ does not need to change the Hadoop interface. Our experiments show the superiority of Hadoop++ over both Hadoop and {HadoopDB} for tasks related to indexing and join processing.},
	number = {1-2},
	journal = {Proc. {VLDB} Endow.},
	author = {Dittrich, Jens and {Quiané-Ruiz}, {Jorge-Arnulfo} and Jindal, Alekh and Kargin, Yagiz and Setty, Vinay and Schad, Jörg},
	month = sep,
	year = {2010},
	pages = {515–529},
	file = {ACM Full Text PDF:/home/vjovanov/.zotero/zotero/fwqxvpuo.default/zotero/storage/KT6XQEZJ/Dittrich et al. - 2010 - Hadoop++ making a yellow elephant run like a chee.pdf:application/pdf;p518-dittrich.pdf:/home/vjovanov/.zotero/zotero/fwqxvpuo.default/zotero/storage/EZFR6ISB/p518-dittrich.pdf:application/pdf}
},

@book{pierce_types_2002,
	edition = {1},
	title = {Types and Programming Languages},
	isbn = {9780262162098},
	publisher = {The {MIT} Press},
	author = {Pierce, Benjamin C.},
	month = feb,
	year = {2002},
	keywords = {Advanced, Shelf, Type Systems},
	file = {Pierce, Benjamin C. - Types and Programming Languages (ISBN 0262162091).chm:/home/vjovanov/.zotero/zotero/fwqxvpuo.default/zotero/storage/6K7QTP7W/Pierce, Benjamin C. - Types and Programming Languages (ISBN 0262162091).chm:application/x-chm}
},

@misc{_cascading_????,
	title = {Cascading},
	url = {www.cascading.org}
},

@article{prokopec_generic_2010,
	title = {A Generic Parallel Collection Framework},
	author = {Prokopec, A. and Rompf, T. and Bagwell, P. and Odersky, M.},
	year = {2010},
	file = {Google Scholar Linked Page:/home/vjovanov/.zotero/zotero/fwqxvpuo.default/zotero/storage/S4BC9CU2/Prokopec et al. - 2010 - A Generic Parallel Collection Framework.pdf:application/pdf}
},

@misc{_hadoop_????,
	title = {Hadoop},
	url = {http://hadoop.apache.org/}
},

@article{naqvi_principles_1995,
	title = {Principles of Programming with Complex Objects and Collection Types},
	author = {Naqvi, {P.B.S.} and Tannen, V. and Wong, L.},
	year = {1995},
	file = {10.1.1.41.5516.pdf:/home/vjovanov/.zotero/zotero/fwqxvpuo.default/zotero/storage/NCX3GIIC/10.1.1.41.5516.pdf:application/pdf;Google Scholar Linked Page:/home/vjovanov/.zotero/zotero/fwqxvpuo.default/zotero/storage/A6DR65TP/Naqvi et al. - 1995 - Principles of Programming with Complex Objects and.pdf:application/pdf}
},

@article{chambers_flumejava:_2010,
	title = {{FlumeJava:} easy, efficient data-parallel pipelines},
	volume = {45},
	shorttitle = {{FlumeJava}},
	number = {6},
	journal = {{ACM} {SIGPLAN} Notices},
	author = {Chambers, C. and Raniwala, A. and Perry, F. and Adams, S. and Henry, R. R and Bradshaw, R. and Weizenbaum, N.},
	year = {2010},
	pages = {363–375},
	file = {Google Scholar Linked Page:/home/vjovanov/.zotero/zotero/fwqxvpuo.default/zotero/storage/79FI98FU/citation.html:text/html;p363-chambers (1).pdf:/home/vjovanov/.zotero/zotero/fwqxvpuo.default/zotero/storage/NPVH3QRT/p363-chambers (1).pdf:application/pdf}
},

@inproceedings{olston_pig_2008-1,
	title = {Pig latin: a not-so-foreign language for data processing},
	shorttitle = {Pig latin},
	booktitle = {Proceedings of the 2008 {ACM} {SIGMOD} international conference on Management of data},
	author = {Olston, C. and Reed, B. and Srivastava, U. and Kumar, R. and Tomkins, A.},
	year = {2008},
	pages = {1099–1110},
	file = {Google Scholar Linked Page:/home/vjovanov/.zotero/zotero/fwqxvpuo.default/zotero/storage/K9EN5CSV/citation.html:text/html;p1099-olston.pdf:/home/vjovanov/.zotero/zotero/fwqxvpuo.default/zotero/storage/ARZH4XWK/p1099-olston.pdf:application/pdf}
},

@inproceedings{abadi_core_1999,
	title = {A core calculus of dependency},
	booktitle = {Proceedings of the 26th {ACM} {SIGPLAN-SIGACT} symposium on Principles of programming languages},
	author = {Abadi, M. and Banerjee, A. and Heintze, N. and Riecke, {J.G.}},
	year = {1999},
	pages = {147–160},
	file = {Google Scholar Linked Page:/home/vjovanov/.zotero/zotero/fwqxvpuo.default/zotero/storage/UKVURSJT/citation.html:text/html;p147-abadi.pdf:/home/vjovanov/.zotero/zotero/fwqxvpuo.default/zotero/storage/2Z7MF9TK/p147-abadi.pdf:application/pdf}
},

@inproceedings{isard_dryad:_2007,
	title = {Dryad: distributed data-parallel programs from sequential building blocks},
	shorttitle = {Dryad},
	booktitle = {Proceedings of the 2nd {ACM} {SIGOPS/EuroSys} European Conference on Computer Systems 2007},
	author = {Isard, M. and Budiu, M. and Yu, Y. and Birrell, A. and Fetterly, D.},
	year = {2007},
	pages = {59–72},
	file = {Google Scholar Linked Page:/home/vjovanov/.zotero/zotero/fwqxvpuo.default/zotero/storage/A5GPSM63/citation.html:text/html;p59-isard.pdf:/home/vjovanov/.zotero/zotero/fwqxvpuo.default/zotero/storage/G2M4QTG2/p59-isard.pdf:application/pdf}
},

@article{dean_mapreduce:_2010,
	title = {{MapReduce:} a flexible data processing tool},
	volume = {53},
	shorttitle = {{MapReduce}},
	number = {1},
	journal = {Communications of the {ACM}},
	author = {Dean, J. and Ghemawat, S.},
	year = {2010},
	pages = {72–77},
	file = {Google Scholar Linked Page:/home/vjovanov/.zotero/zotero/fwqxvpuo.default/zotero/storage/Q8FTBN6C/citation.html:text/html}
},

@inproceedings{gill_short_1993,
	address = {New York, {NY}, {USA}},
	series = {{FPCA} '93},
	title = {A short cut to deforestation},
	isbn = {{0-89791-595-X}},
	url = {http://doi.acm.org/10.1145/165180.165214},
	doi = {10.1145/165180.165214},
	booktitle = {Proceedings of the conference on Functional programming languages and computer architecture},
	publisher = {{ACM}},
	author = {Gill, Andrew and Launchbury, John and Peyton Jones, Simon L.},
	year = {1993},
	keywords = {fusion},
	pages = {223–232},
	file = {ACM Full Text PDF:/home/vjovanov/.zotero/zotero/fwqxvpuo.default/zotero/storage/8VTVXRN5/Gill et al. - 1993 - A short cut to deforestation.pdf:application/pdf}
},

@inproceedings{filinski_representing_1994,
	title = {Representing monads},
	booktitle = {Proceedings of the 21st {ACM} {SIGPLAN-SIGACT} symposium on Principles of programming languages},
	author = {Filinski, A.},
	year = {1994},
	pages = {446–457},
	file = {Google Scholar Linked Page:/home/vjovanov/.zotero/zotero/fwqxvpuo.default/zotero/storage/VRWJ565J/citation.html:text/html}
},

@inproceedings{chafi_language_2010,
	title = {Language virtualization for heterogeneous parallel computing},
	booktitle = {Proceedings of the {ACM} international conference on Object oriented programming systems languages and applications},
	author = {Chafi, H. and {DeVito}, Z. and Moors, A. and Rompf, T. and Sujeeth, {A.K.} and Hanrahan, P. and Odersky, M. and Olukotun, K.},
	year = {2010},
	pages = {835–847},
	file = {Google Scholar Linked Page:/home/vjovanov/.zotero/zotero/fwqxvpuo.default/zotero/storage/P46ZEFKJ/citation.html:text/html;p835-chafi.pdf:/home/vjovanov/.zotero/zotero/fwqxvpuo.default/zotero/storage/G4JAF8ZC/p835-chafi.pdf:application/pdf}
},

@article{bu_haloop:_2010,
	title = {{HaLoop:} efficient iterative data processing on large clusters},
	volume = {3},
	shorttitle = {{HaLoop}},
	number = {1-2},
	journal = {Proceedings of the {VLDB} Endowment},
	author = {Bu, Y. and Howe, B. and Balazinska, M. and Ernst, M. D},
	year = {2010},
	pages = {285–296},
	file = {Google Scholar Linked Page:/home/vjovanov/.zotero/zotero/fwqxvpuo.default/zotero/storage/BVI967XD/citation.html:text/html;p285-bu.pdf:/home/vjovanov/.zotero/zotero/fwqxvpuo.default/zotero/storage/9TAUADWG/p285-bu.pdf:application/pdf}
},

@inproceedings{thusoo_hive_2010-1,
	title = {Hive - a petabyte scale data warehouse using Hadoop},
	doi = {10.1109/ICDE.2010.5447738},
	abstract = {The size of data sets being collected and analyzed in the industry for business intelligence is growing rapidly, making traditional warehousing solutions prohibitively expensive. Hadoop is a popular open-source map-reduce implementation which is being used in companies like Yahoo, Facebook etc. to store and process extremely large data sets on commodity hardware. However, the map-reduce programming model is very low level and requires developers to write custom programs which are hard to maintain and reuse. In this paper, we present Hive, an open-source data warehousing solution built on top of Hadoop. Hive supports queries expressed in a {SQL-like} declarative language - {HiveQL}, which are compiled into map-reduce jobs that are executed using Hadoop. In addition, {HiveQL} enables users to plug in custom map-reduce scripts into queries. The language includes a type system with support for tables containing primitive types, collections like arrays and maps, and nested compositions of the same. The underlying {IO} libraries can be extended to query data in custom formats. Hive also includes a system catalog - Metastore - that contains schemas and statistics, which are useful in data exploration, query optimization and query compilation. In Facebook, the Hive warehouse contains tens of thousands of tables and stores over {700TB} of data and is being used extensively for both reporting and ad-hoc analyses by more than 200 users per month.},
	booktitle = {Data Engineering {(ICDE)}, 2010 {IEEE} 26th International Conference on},
	author = {Thusoo, A. and Sarma, {J.S.} and Jain, N. and Shao, Zheng and Chakka, P. and Zhang, Ning and Antony, S. and Liu, Hao and Murthy, R.},
	month = mar,
	year = {2010},
	keywords = {{catalog;SQL-like}, compilation;query, compositions;open-source, data, declarative, domain, exploration;map-reduce, Hadoop, implementation;petabyte, intelligence;data, jobs;maps;nested, language;arrays;business, {language;Metastore}, map-reduce, {optimization;SQL;competitive}, processing;, scale, {software;HiveQL}, software;query, system, types;query, warehouse;primitive, warehouses;public},
	pages = {996 --1005},
	file = {IEEE Xplore Abstract Record:/home/vjovanov/.zotero/zotero/fwqxvpuo.default/zotero/storage/PWZ9T8BJ/stamp.html:text/html;IEEE Xplore Full Text PDF:/home/vjovanov/.zotero/zotero/fwqxvpuo.default/zotero/storage/FBQ8U3GF/Thusoo et al. - 2010 - Hive - a petabyte scale data warehouse using Hadoo.pdf:application/pdf}
},

@inproceedings{thusoo_hive_2010-2,
	title = {Hive - a petabyte scale data warehouse using Hadoop},
	doi = {10.1109/ICDE.2010.5447738},
	abstract = {The size of data sets being collected and analyzed in the industry for business intelligence is growing rapidly, making traditional warehousing solutions prohibitively expensive. Hadoop is a popular open-source map-reduce implementation which is being used in companies like Yahoo, Facebook etc. to store and process extremely large data sets on commodity hardware. However, the map-reduce programming model is very low level and requires developers to write custom programs which are hard to maintain and reuse. In this paper, we present Hive, an open-source data warehousing solution built on top of Hadoop. Hive supports queries expressed in a {SQL-like} declarative language - {HiveQL}, which are compiled into map-reduce jobs that are executed using Hadoop. In addition, {HiveQL} enables users to plug in custom map-reduce scripts into queries. The language includes a type system with support for tables containing primitive types, collections like arrays and maps, and nested compositions of the same. The underlying {IO} libraries can be extended to query data in custom formats. Hive also includes a system catalog - Metastore - that contains schemas and statistics, which are useful in data exploration, query optimization and query compilation. In Facebook, the Hive warehouse contains tens of thousands of tables and stores over {700TB} of data and is being used extensively for both reporting and ad-hoc analyses by more than 200 users per month.},
	booktitle = {Data Engineering {(ICDE)}, 2010 {IEEE} 26th International Conference on},
	author = {Thusoo, A. and Sarma, {J.S.} and Jain, N. and Shao, Zheng and Chakka, P. and Zhang, Ning and Antony, S. and Liu, Hao and Murthy, R.},
	month = mar,
	year = {2010},
	keywords = {{catalog;SQL-like}, compilation;query, compositions;open-source, data, declarative, domain, exploration;map-reduce, Hadoop, implementation;petabyte, intelligence;data, jobs;maps;nested, language;arrays;business, {language;Metastore}, map-reduce, {optimization;SQL;competitive}, processing;, scale, {software;HiveQL}, software;query, system, types;query, warehouse;primitive, warehouses;public},
	pages = {996 --1005},
	file = {IEEE Xplore Abstract Record:/home/vjovanov/.zotero/zotero/fwqxvpuo.default/zotero/storage/ASVK7K3B/stamp.html:text/html;IEEE Xplore Full Text PDF:/home/vjovanov/.zotero/zotero/fwqxvpuo.default/zotero/storage/3Q7U7FMG/Thusoo et al. - 2010 - Hive - a petabyte scale data warehouse using Hadoo.pdf:application/pdf}
},

@article{alexandrov_mapreduce_????,
	title = {{MapReduce} and {PACT-Comparing} Data Parallel Programming Models},
	author = {Alexandrov, A. and Ewen, S. and Heimel, M. and Hueske, F. and Kao, O. and Markl, V. and Nijkamp, E. and Warneke, D. and Hovestadt, M. and Kliem, A. and others},
	file = {ComparingMapReduceAndPACTs_11 (1).pdf:/home/vjovanov/.zotero/zotero/fwqxvpuo.default/zotero/storage/SB5I36T7/ComparingMapReduceAndPACTs_11 (1).pdf:application/pdf;Google Scholar Linked Page:/home/vjovanov/.zotero/zotero/fwqxvpuo.default/zotero/storage/RBTCGPIC/Alexandrov et al. - MapReduce and PACT-Comparing Data Parallel Program.pdf:application/pdf}
}
